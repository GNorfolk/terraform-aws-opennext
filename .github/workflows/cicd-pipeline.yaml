name: CI/CD Pipeline

on:
  push:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  get-metadata:
    name: "Get Metadata"
    runs-on: ubuntu-latest
    outputs:
      build_datetime: ${{ steps.metadata.outputs.build_datetime }}
      build_timestamp: ${{ steps.metadata.outputs.build_timestamp }}
      build_epoch: ${{ steps.metadata.outputs.build_epoch }}
    steps:
      - id: metadata
        run: |
          datetime=$(date -u +'%Y-%m-%dT%H:%M:%S%z')
          echo "build_datetime=$datetime" >> $GITHUB_OUTPUT
          echo "build_timestamp=$(date --date=$datetime -u +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
          echo "build_epoch=$(date --date=$datetime -u +'%s')" >> $GITHUB_OUTPUT
  
  scan-secrets:
    needs: [get-metadata]
    name: "Secrets Scan"
    uses: ./.github/workflows/scan-secrets.yaml
  
  check-file-format:
    needs: [get-metadata]
    name: "Check File Format"
    uses: ./.github/workflows/check-file-format.yaml
  
  check-markdown-format:
    needs: [get-metadata]
    name: "Check Markdown Format"
    uses: ./.github/workflows/check-markdown-format.yaml
  
  cicd-pipeline-test:
    runs-on: ubuntu-latest
    needs: [scan-secrets, check-file-format, check-markdown-format]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - name: List Variables
        run: |
          export BUILD_DATETIME="${{ needs.get-metadata.outputs.build_datetime }}"
          export BUILD_TIMESTAMP="${{ needs.get-metadata.outputs.build_timestamp }}"
          export BUILD_EPOCH="${{ needs.get-metadata.outputs.build_epoch }}"
          make list-variables
  
  terrascan:
    name: Terrascan
    runs-on: ubuntu-latest
    needs: [cicd-pipeline-test]
    if: success()
    
    steps:
      - uses: actions/checkout@v3
          
      - name: Run Terrascan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'aws'
          sarif_upload: true

      - name: Upload SARIF File
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: terrascan.sarif